{"remainingRequest":"D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\node_modules\\babel-loader\\lib\\index.js!D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\src\\components\\charts\\Question2Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\src\\components\\charts\\Question2Chart.vue","mtime":1684210505000},{"path":"D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\babel.config.js","mtime":1684210505000},{"path":"D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748233163623},{"path":"D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1748233164783},{"path":"D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1748233163623},{"path":"D:\\gittest\\raw\\山东大学数据可视化软件学院可视化大作业\\luogu_DataVisualization-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1748233162063}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJzsKaW1wb3J0IGpzb25EYXRhIGZyb20gJ0AvYXNzZXRzL2RhdGEvYWxnX2RpZmZfc3VuYnVyc3QuanNvbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUXVlc3Rpb24yQ2hhcnQnLAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQxOiB1bmRlZmluZWQsCiAgICAgIGNoYXJ0MjogdW5kZWZpbmVkLAogICAgICBjdXJyZW50S2V5OiAn5Yqo5oCB6KeE5YiSLGRwJywKICAgICAgY3VycmVudERhdGE6IHsKICAgICAgICB4OiB1bmRlZmluZWQsCiAgICAgICAgeTE6IHVuZGVmaW5lZCwKICAgICAgICB5MjogdW5kZWZpbmVkCiAgICAgIH0KICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuc3dpdGNoRGF0YSgpOwogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmRyYXdQaWUoKTsKICAgIHRoaXMuZHJhd0NvbCgpOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIHN3aXRjaERhdGEoKSB7CiAgICAgIGxldCBhbGdfZGF0YTsKICAgICAgbGV0IHNvcnRfb3JkZXIgPSBbJ+WFpemXqCcsICfmma7lj4otJywgJ+aZruWPii/mj5Dpq5gtJywgJ+aZruWPiisv5o+Q6auYJywgJ+aPkOmrmCsv55yB6YCJLScsICfnnIHpgIkvTk9JLScsICdOT0kvTk9JKy9DVFNDJywgJ+aaguaXoOivhOWumiddLAogICAgICAgICAgeCA9IFtdLAogICAgICAgICAgeTEgPSBbXSwKICAgICAgICAgIHkyID0gW107CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGpzb25EYXRhLmxlbmd0aDsgaSsrKSBpZiAoanNvbkRhdGFbaV0ubmFtZSA9PT0gdGhpcy5jdXJyZW50S2V5KSB7CiAgICAgICAgYWxnX2RhdGEgPSBqc29uRGF0YVtpXTsKICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgbGV0IHNvcnRlZF9hbGcgPSBhbGdfZGF0YS5kaWZmX2RhdGEuc29ydCgoYSwgYikgPT4gewogICAgICAgIHJldHVybiBzb3J0X29yZGVyLmluZGV4T2YoYS5uYW1lKSAtIHNvcnRfb3JkZXIuaW5kZXhPZihiLm5hbWUpOwogICAgICB9KTsKICAgICAgbGV0IHNvcnRlZF9yYXRlID0gYWxnX2RhdGEucmF0ZV9kYXRhLnNvcnQoKGEsIGIpID0+IHsKICAgICAgICByZXR1cm4gc29ydF9vcmRlci5pbmRleE9mKGEubmFtZSkgLSBzb3J0X29yZGVyLmluZGV4T2YoYi5uYW1lKTsKICAgICAgfSk7CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNvcnRlZF9hbGcubGVuZ3RoOyBpKyspIHsKICAgICAgICB4LnB1c2goc29ydGVkX2FsZ1tpXS5uYW1lKTsKICAgICAgICB5MS5wdXNoKHNvcnRlZF9hbGdbaV0udmFsdWUpOwogICAgICAgIHkyLnB1c2goKHNvcnRlZF9yYXRlW2ldLnZhbHVlICogMTAwKS50b0ZpeGVkKDIpKTsKICAgICAgfQoKICAgICAgdGhpcy5jdXJyZW50RGF0YS50aXRsZSA9ICdbJyArIHRoaXMuY3VycmVudEtleSArICdd566X5rOV6aKY55uu6Zq+5bqm5Y+K6YCa6L+H546H5YiG5biDJzsKICAgICAgdGhpcy5jdXJyZW50RGF0YS54ID0geDsKICAgICAgdGhpcy5jdXJyZW50RGF0YS55MSA9IHkxOwogICAgICB0aGlzLmN1cnJlbnREYXRhLnkyID0geTI7CiAgICB9LAoKICAgIGRyYXdQaWUoKSB7CiAgICAgIHRoaXMuY2hhcnQxID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGFydDEnKSk7CiAgICAgIHRoaXMuY2hhcnQxLnNldE9wdGlvbih7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfmtJvosLfpopjnm67nrpfms5XliIbluIMoVG9wMjApJywKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgb3JpZW50OiAndmVydGljYWwnLAogICAgICAgICAgbGVmdDogJ2xlZnQnCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBuYW1lOiAn566X5rOV57G75Z6LJywKICAgICAgICAgIHR5cGU6ICdwaWUnLAogICAgICAgICAgcmFkaXVzOiAnNTAlJywKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBib3JkZXJSYWRpdXM6IDgsCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyCiAgICAgICAgICB9LAogICAgICAgICAgZGF0YToganNvbkRhdGEsCiAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICBzaGFkb3dPZmZzZXRYOiAwLAogICAgICAgICAgICAgIHNoYWRvd0NvbG9yOiAncmdiYSgwLCAwLCAwLCAwLjUpJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfSk7CiAgICAgIHRoaXMuY2hhcnQxLm9uKCdjbGljaycsIHBhcmFtcyA9PiB7CiAgICAgICAgdGhpcy5jdXJyZW50S2V5ID0gcGFyYW1zLm5hbWU7CiAgICAgICAgdGhpcy5zd2l0Y2hEYXRhKCk7CiAgICAgICAgdGhpcy5kcmF3Q29sKCk7CiAgICAgIH0pOwogICAgfSwKCiAgICBkcmF3Q29sKCkgewogICAgICBjb25zdCBjb2xvcnMgPSBbJyM1NDcwQzYnLCAnI0VFNjY2NiddOwogICAgICB0aGlzLmNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjaGFydDInKSk7CiAgICAgIHRoaXMuY2hhcnQuc2V0T3B0aW9uKHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogdGhpcy5jdXJyZW50RGF0YS50aXRsZSwKICAgICAgICAgIGxlZnQ6ICdjZW50ZXInCiAgICAgICAgfSwKICAgICAgICBjb2xvcjogY29sb3JzLAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdjcm9zcycKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIHJpZ2h0OiAnMjAlJwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBbJ+mimOebruaVsCcsICfpgJrov4fnjocnXSwKICAgICAgICAgIG9yaWVudDogJ3ZlcnRpY2FsJywKICAgICAgICAgIGxlZnQ6ICdyaWdodCcKICAgICAgICB9LAogICAgICAgIHhBeGlzOiBbewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIGF4aXNUaWNrOiB7CiAgICAgICAgICAgIGFsaWduV2l0aExhYmVsOiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgIGludGVydmFsOiAwCiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogdGhpcy5jdXJyZW50RGF0YS54CiAgICAgICAgfV0sCiAgICAgICAgeUF4aXM6IFt7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogJ+mimOebruaVsCcsCiAgICAgICAgICBwb3NpdGlvbjogJ3JpZ2h0JywKICAgICAgICAgIGFsaWduVGlja3M6IHRydWUsCiAgICAgICAgICBheGlzTGluZTogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogY29sb3JzWzBdCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgbmFtZTogJ+mAmui/h+eOhycsCiAgICAgICAgICBwb3NpdGlvbjogJ2xlZnQnLAogICAgICAgICAgYWxpZ25UaWNrczogdHJ1ZSwKICAgICAgICAgIGF4aXNMaW5lOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIGxpbmVTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiBjb2xvcnNbMV0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9ICUnCiAgICAgICAgICB9CiAgICAgICAgfV0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+mimOebruaVsCcsCiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIHlBeGlzSW5kZXg6IDAsCiAgICAgICAgICBkYXRhOiB0aGlzLmN1cnJlbnREYXRhLnkxCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ+mAmui/h+eOhycsCiAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICB5QXhpc0luZGV4OiAxLAogICAgICAgICAgZGF0YTogdGhpcy5jdXJyZW50RGF0YS55MgogICAgICAgIH1dCiAgICAgIH0pOwogICAgfQoKICB9Cn07"},{"version":3,"mappings":"AAQA;AACA;AAEA;EACAA,sBADA;;EAEAC;IACA;MACAC,iBADA;MAEAC,iBAFA;MAGAC,qBAHA;MAIAC;QACAC,YADA;QAEAC,aAFA;QAGAC;MAHA;IAJA;EAUA,CAbA;;EAcAC;IACA;EACA,CAhBA;;EAiBAC;IACA;IACA;EACA,CApBA;;EAqBAC;IACAC;MACA;MACA;MAAA,IACAN,MADA;MAAA,IACAC,OADA;MAAA,IACAC,OADA;;MAEA,0CACA;QACAK;QACA;MACA;;MAEA;QACA;MACA,CAFA;MAGA;QACA;MACA,CAFA;;MAIA;QACAP;QACAC;QACAC;MACA;;MAEA;MACA;MACA;MACA;IACA,CA5BA;;IA8BAM;MACA;MACA;QACAC;UACAC,uBADA;UAEAC;QAFA,CADA;QAKAC;UACAC;QADA,CALA;QAQAC;UACAC,kBADA;UAEAJ;QAFA,CARA;QAYAK,SACA;UACAtB,YADA;UAEAuB,WAFA;UAGAC,aAHA;UAIAC;YACAC,eADA;YAEAC;UAFA,CAJA;UAQA1B,cARA;UASA2B;YACAH;cACAI,cADA;cAEAC,gBAFA;cAGAC;YAHA;UADA;QATA,CADA;MAZA;MAgCA;QACA;QACA;QACA;MACA,CAJA;IAKA,CArEA;;IAuEAC;MACA;MACA;MACA;QACAjB;UACAC,4BADA;UAEAC;QAFA,CADA;QAKAgB,aALA;QAMAf;UACAC,eADA;UAEAe;YACAX;UADA;QAFA,CANA;QAYAY;UACAC;QADA,CAZA;QAeAhB;UACAnB,oBADA;UAEAoB,kBAFA;UAGAJ;QAHA,CAfA;QAoBAoB,QACA;UACAd,gBADA;UAEAe;YACAC;UADA,CAFA;UAKAC;YACAC;UADA,CALA;UAQAxC;QARA,CADA,CApBA;QAgCAyC,QACA;UACAnB,aADA;UAEAvB,WAFA;UAGA2C,iBAHA;UAIAC,gBAJA;UAKAC;YACAC,UADA;YAEAC;cACAd;YADA;UAFA;QALA,CADA,EAaA;UACAV,aADA;UAEAvB,WAFA;UAGA2C,gBAHA;UAIAC,gBAJA;UAKAC;YACAC,UADA;YAEAC;cACAd;YADA;UAFA,CALA;UAWAO;YACAQ;UADA;QAXA,CAbA,CAhCA;QA6DA1B,SACA;UACAtB,WADA;UAEAuB,WAFA;UAGA0B,aAHA;UAIAhD;QAJA,CADA,EAOA;UACAD,WADA;UAEAuB,YAFA;UAGA0B,aAHA;UAIAhD;QAJA,CAPA;MA7DA;IA4EA;;EAtJA;AArBA","names":["name","data","chart1","chart2","currentKey","currentData","x","y1","y2","created","mounted","methods","switchData","alg_data","drawPie","title","text","left","tooltip","trigger","legend","orient","series","type","radius","itemStyle","borderRadius","borderWidth","emphasis","shadowBlur","shadowOffsetX","shadowColor","drawCol","color","axisPointer","grid","right","xAxis","axisTick","alignWithLabel","axisLabel","interval","yAxis","position","alignTicks","axisLine","show","lineStyle","formatter","yAxisIndex"],"sourceRoot":"src/components/charts","sources":["Question2Chart.vue"],"sourcesContent":["<template>\n  <div>\n    <div id=\"chart1\" class=\"chart\" style=\"height: 700px; width: 560px\"></div>\n    <div id=\"chart2\" class=\"chart\" style=\"height: 700px; width: 760px\"></div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\nimport jsonData from '@/assets/data/alg_diff_sunburst.json'\n\nexport default {\n  name: 'Question2Chart',\n  data() {\n    return {\n      chart1: undefined,\n      chart2: undefined,\n      currentKey: '动态规划,dp',\n      currentData: {\n        x: undefined,\n        y1: undefined,\n        y2: undefined\n      }\n    }\n  },\n  created() {\n    this.switchData()\n  },\n  mounted() {\n    this.drawPie()\n    this.drawCol()\n  },\n  methods: {\n    switchData() {\n      let alg_data\n      let sort_order = ['入门', '普及-', '普及/提高-', '普及+/提高', '提高+/省选-', '省选/NOI-', 'NOI/NOI+/CTSC', '暂无评定'],\n          x = [], y1 = [], y2 = []\n      for (let i = 0; i < jsonData.length; i++)\n        if (jsonData[i].name === this.currentKey) {\n          alg_data = jsonData[i]\n          break\n        }\n\n      let sorted_alg = alg_data.diff_data.sort((a, b) => {\n        return sort_order.indexOf(a.name) - sort_order.indexOf(b.name);\n      })\n      let sorted_rate = alg_data.rate_data.sort((a, b) => {\n        return sort_order.indexOf(a.name) - sort_order.indexOf(b.name);\n      })\n\n      for (let i = 0; i < sorted_alg.length; i++) {\n        x.push(sorted_alg[i].name)\n        y1.push(sorted_alg[i].value)\n        y2.push((sorted_rate[i].value * 100).toFixed(2))\n      }\n\n      this.currentData.title = '[' + this.currentKey + ']算法题目难度及通过率分布'\n      this.currentData.x = x\n      this.currentData.y1 = y1\n      this.currentData.y2 = y2\n    },\n\n    drawPie() {\n      this.chart1 = echarts.init(document.getElementById('chart1'))\n      this.chart1.setOption({\n        title: {\n          text: '洛谷题目算法分布(Top20)',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [\n          {\n            name: '算法类型',\n            type: 'pie',\n            radius: '50%',\n            itemStyle: {\n              borderRadius: 8,\n              borderWidth: 2\n            },\n            data: jsonData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      })\n      this.chart1.on('click', (params) => {\n        this.currentKey = params.name\n        this.switchData()\n        this.drawCol()\n      })\n    },\n\n    drawCol() {\n      const colors = ['#5470C6', '#EE6666']\n      this.chart = echarts.init(document.getElementById('chart2'))\n      this.chart.setOption({\n        title: {\n          text: this.currentData.title,\n          left: 'center'\n        },\n        color: colors,\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          }\n        },\n        grid: {\n          right: '20%'\n        },\n        legend: {\n          data: ['题目数', '通过率'],\n          orient: 'vertical',\n          left: 'right'\n        },\n        xAxis: [\n          {\n            type: 'category',\n            axisTick: {\n              alignWithLabel: true\n            },\n            axisLabel: {\n              interval: 0\n            },\n            data: this.currentData.x\n          }\n        ],\n        yAxis: [\n          {\n            type: 'value',\n            name: '题目数',\n            position: 'right',\n            alignTicks: true,\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: colors[0]\n              }\n            }\n          },\n          {\n            type: 'value',\n            name: '通过率',\n            position: 'left',\n            alignTicks: true,\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: colors[1]\n              }\n            },\n            axisLabel: {\n              formatter: '{value} %'\n            }\n          }\n        ],\n        series: [\n          {\n            name: '题目数',\n            type: 'bar',\n            yAxisIndex: 0,\n            data: this.currentData.y1\n          },\n          {\n            name: '通过率',\n            type: 'line',\n            yAxisIndex: 1,\n            data: this.currentData.y2\n          }\n        ]\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.block {\n  position: relative;\n  width: 90%;\n  text-align: left;\n  left: 5%;\n  background: white;\n  margin: 15px 0;\n}\n\n.input /deep/ .el-input__inner, .select /deep/ .el-input__inner,\n.input /deep/ .el-textarea__inner, .date /deep/ .el-input__inner {\n  color: black;\n}\n\n.header {\n  padding: 0 5%;\n}\n\n.block-card /deep/ .el-card__header {\n  background: #FAFAFA;\n}\n\n.charts {\n  margin: 0 60px\n}\n\n.chart {\n  float: left;\n}\n\n</style>\n"]}]}